Kill

Listen

Assemblies

Server-file-management

UpdateContent

Cache-clear

FetchUrl

Content Types repository

DumpContent

AddFileFromWeb [url] [destinationpath] | [destinationparentid]

FetchContentFromUrl [url]

ExtractElementsFromXPath

HealthCheck / Diagnostics

WriteToLog

Send Test Mails

Makros


BatchUpdateContent

Convert

ListScheduled jobs, run job

List nuget packages / add-ons and their versions

Grep

Activity logging: https://world.episerver.com/documentation/developer-guides/CMS/logging/activity-logging/

HtmlAgilityPack 

Content report export (as downloadable?)

Copy

Move

AttachProvider

GenerateContent

Command that uses Fluid or Scriban or similar templating language

RunningTasks

Debug

Diagnosis

Restart

Cache-management

WarmUp

SendToDownload

Where

Memory

Look At Cachekey

Projects

Tasks

register routes / list registrered routes

Content from Url

Support "ToFile", "ToJson", "ToXml", "DoDictionary" - just like ToList.

Download (let's the current user download a file created by the pipe-chain) (NOTE: Always using Content Disposition). Only works in sync-mode

Upload (takes a file uploaded in the body of run-command and passes it in through the pipe-command)


Content-versions, fetches all versions of a piece of content

Dynamic Data Store

Content Type Details

Download / Upload (from CLI / UI?)

ChangeLog

Error log (listen to it?)

Start (special keyword, starts entire command interpreter in new thread)

https://hotchocolate.io/docs/introduction

Create Personal Access Token. / List tokens //Delete Token

CreateContent type, parent | SetProperty name value (multiple)| SaveContent (Publish?) | Loadcontent (from ref) |DeleteContent

Foreach (pipes each element in a list)


Session Data Load / Save / Clear / list / append



Autocomplete in the UI (after pipe or at newline, suggest commands. After command suggest parameters)

UI Control bar. With download link to CLI, about-box, pop-up overviews and so on.

Converter commands


---
Single-sessions - divide log

RunCommand returns command-output

More detailed commands in log.
---

Challenge: Merge pipes, pipe variables

---

Download CLI from episerver


---

Command piping?!

Special input? Perhaps file-upload?
Support drag&Drop of stuff? Allow side-bars?

---
Syntax

keyword [parameters] : Starts new thread running keyword command.
keyword [parameters]|keyword [parameters] : Starts new thread(s) running the first keyword and then delivering the output as input to the second.
[threadname] [input]: sends the specific input to the named worker.


---

[Command(Keyword="echo",DefaultRoles="WebAdmins,Administrators",Description="")]
public class EchoCommand : CommandBase{
	[CommandArgument(Default=true,Description="The text to echo")]
	public string EchoText{get;set;}

	public void Execute(){
		...
	}

}